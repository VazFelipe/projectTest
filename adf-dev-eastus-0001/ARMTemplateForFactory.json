{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-eastus-0001"
		},
		"RestApiSocrataService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestApiSocrataService'"
		},
		"dls_socrata_api_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dls_socrata_api'"
		},
		"RestApiSocrataService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat('https://data.sfgov.org/resource/wg3w-h783.json?$$exclude_system_fields=',linkedService().exclude_system_fields),'&$limit='),linkedService().limit),'&$where='),'('),linkedService().where_1),'BETWEEN '),linkedService().start_date),' AND '), linkedService().end_date),') OR ('),linkedService().where_2),'BETWEEN '),linkedService().start_date),' AND '), linkedService().end_date),')')}"
		},
		"RestApiSocrataService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "2osd2wzioj43v7iymmfnt74x3"
		},
		"dls_socrata_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsdeveastus0001.dfs.core.windows.net/"
		},
		"everyday_210PM_Brasilia_properties_02_validate_extraction_silver_parameters_file_name": {
			"type": "string",
			"defaultValue": "san_francisco_police_department.parquet"
		},
		"everyday_210PM_Brasilia_properties_02_validate_extraction_silver_parameters_dataset": {
			"type": "string",
			"defaultValue": "police_department"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_exclude_system_fields": {
			"type": "string",
			"defaultValue": "False"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_limit": {
			"type": "string",
			"defaultValue": "9999999999"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_where_1": {
			"type": "string",
			"defaultValue": ":created_at "
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_dataset": {
			"type": "string",
			"defaultValue": "police_department"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_field_name_1": {
			"type": "string",
			"defaultValue": "created_at"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_response_format": {
			"type": "string",
			"defaultValue": ".json"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_field_name_2": {
			"type": "string",
			"defaultValue": "updated_at"
		},
		"everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_where_2": {
			"type": "string",
			"defaultValue": ":updated_at "
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/01_extract_from_api_raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "trigger_time",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "trigger_time",
							"value": {
								"value": "@addDays(pipeline().TriggerTime, -1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "unix_trigger_time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "trigger_time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "unix_trigger_time",
							"value": {
								"value": "@string(sub(div(ticks(variables('trigger_time')),10000000),div(ticks(variables('param_epoch')),10000000)))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "trigger_time_year",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "insert_datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "trigger_time_year",
							"value": {
								"value": "@formatDateTime(variables('insert_datetime'), 'yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "trigger_time_month",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "insert_datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "trigger_time_month",
							"value": {
								"value": "@formatDateTime(variables('insert_datetime'), 'MM')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Socrata Api to Blob Storage Gen2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "url_api",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SFPD_restapi_raw",
								"type": "DatasetReference",
								"parameters": {
									"exclude_system_fields": {
										"value": "@pipeline().parameters.exclude_system_fields",
										"type": "Expression"
									},
									"limit": {
										"value": "@pipeline().parameters.limit",
										"type": "Expression"
									},
									"where_1": {
										"value": "@pipeline().parameters.where_1",
										"type": "Expression"
									},
									"start_date": {
										"value": "@variables('start_date')",
										"type": "Expression"
									},
									"end_date": {
										"value": "@variables('end_date')",
										"type": "Expression"
									},
									"where_2": {
										"value": "@pipeline().parameters.where_2",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SFPD_response_raw",
								"type": "DatasetReference",
								"parameters": {
									"dataset": {
										"value": "@pipeline().parameters.dataset",
										"type": "Expression"
									},
									"trigger_time_year": {
										"value": "@variables('trigger_time_year')",
										"type": "Expression"
									},
									"trigger_time_month": {
										"value": "@variables('trigger_time_month')",
										"type": "Expression"
									},
									"response_format": {
										"value": "@pipeline().parameters.response_format",
										"type": "Expression"
									},
									"unix_trigger_time": {
										"value": "@variables('unix_trigger_time')",
										"type": "Expression"
									},
									"file_path": {
										"value": "@variables('file_path')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('file_name')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "file_path",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "unix_trigger_time",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "trigger_time_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "trigger_time_month",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Watermark unified",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "start_date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_path",
							"value": {
								"value": "@concat(concat(concat(concat(concat('01-raw/',pipeline().parameters.dataset,'/'), variables('trigger_time_year')),'/'),variables('trigger_time_month')),'/')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "file_name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "file_path",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_name",
							"value": {
								"value": "@concat(concat(concat(concat(concat(concat(variables('unix_trigger_time'),'_'),pipeline().parameters.field_name_1,'_'),pipeline().parameters.field_name_2),'_'),formatDateTime(replace(variables('start_date'),'''',''), 'yyyyMMdd')),pipeline().parameters.response_format)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy watermark to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "insert_datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "processing_mode_",
										"value": {
											"value": "@string('FULL LOAD')",
											"type": "Expression"
										}
									},
									{
										"name": "insert_datetime_",
										"value": {
											"value": "@addDays(variables('insert_datetime'),1)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "processing_mode_",
											"type": "String"
										},
										"sink": {
											"name": "processing_mode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "insert_datetime_",
											"type": "String"
										},
										"sink": {
											"name": "insert_datetime",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SFPD_log_template_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SFPD_log_template_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Watermark unified",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy watermark to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_append_trigger_time_bronze",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"LogSourceTemplate": {},
									"LogSource": {},
									"LogLoad": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "start_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "insert_datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_date",
							"value": {
								"value": "@concat('''',concat(formatDateTime(variables('insert_datetime'), 'yyyy-MM-dd'),'T00:00:00'''))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "insert_datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@concat('''',concat(formatDateTime(variables('insert_datetime'), 'yyyy-MM-dd'),'T23:59:59'''))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ReadLogSource",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "SFPD_log_raw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "insert_datetime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReadLogSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "insert_datetime",
							"value": {
								"value": "@substring(string(activity('ReadLogSource').output.value[add(int(string(activity('ReadLogSource').output.count)),-1)]),50,28)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "url_api",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "url_api",
							"value": {
								"value": "@{concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat('https://data.sfgov.org/resource/wg3w-h783.json?$$exclude_system_fields=',pipeline().parameters.exclude_system_fields),'&$limit='),pipeline().parameters.limit),'&$where='),'('),pipeline().parameters.where_1),'BETWEEN '),variables('start_date')),' AND '), variables('end_date')),') OR ('),pipeline().parameters.where_2),'BETWEEN '),variables('start_date')),' AND '), variables('end_date')),')')}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"exclude_system_fields": {
						"type": "string",
						"defaultValue": "False"
					},
					"limit": {
						"type": "string",
						"defaultValue": "9999999999"
					},
					"where_1": {
						"type": "string",
						"defaultValue": ":created_at "
					},
					"dataset": {
						"type": "string",
						"defaultValue": "police_department"
					},
					"field_name_1": {
						"type": "string",
						"defaultValue": "created_at"
					},
					"response_format": {
						"type": "string",
						"defaultValue": ".json"
					},
					"field_name_2": {
						"type": "string",
						"defaultValue": "updated_at"
					},
					"where_2": {
						"type": "string",
						"defaultValue": ":updated_at "
					}
				},
				"variables": {
					"param_epoch": {
						"type": "String",
						"defaultValue": "1970-01-01T00:00:00Z"
					},
					"trigger_time": {
						"type": "String"
					},
					"unix_trigger_time": {
						"type": "String"
					},
					"trigger_time_year": {
						"type": "String"
					},
					"trigger_time_month": {
						"type": "String"
					},
					"file_path": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					},
					"response_execution_log": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"insert_datetime": {
						"type": "String"
					},
					"url_api": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-06-03T23:31:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SFPD_restapi_raw')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_response_raw')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_log_template_raw')]",
				"[concat(variables('factoryId'), '/dataflows/01_append_trigger_time_bronze')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_log_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_validate_extraction_silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "From raw to silver layer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Watermark unified",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SFPD_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SFPD_parquet_silver",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@pipeline().parameters.file_name",
										"type": "Expression"
									},
									"dataset": {
										"value": "@pipeline().parameters.dataset",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy watermark to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "insert_datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "processing_mode_",
										"value": {
											"value": "@string('FULL LOAD')",
											"type": "Expression"
										}
									},
									{
										"name": "insert_datetime_",
										"value": {
											"value": "@addDays(variables('insert_datetime'),1)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "processing_mode_",
											"type": "String"
										},
										"sink": {
											"name": "processing_mode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "insert_datetime_",
											"type": "String"
										},
										"sink": {
											"name": "insert_datetime",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SFPD_log_template_silver",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SFPD_log_template_silver",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Watermark unified",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy watermark to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_append_trigger_time_silver",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"LogSourceTemplate": {},
									"LogSource": {},
									"LogLoad": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "ReadLogSource",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "SFPD_log_silver",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "insert_datetime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReadLogSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "insert_datetime",
							"value": {
								"value": "@substring(string(activity('ReadLogSource').output.value[add(int(string(activity('ReadLogSource').output.count)),-1)]),50,20)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"file_name": {
						"type": "string",
						"defaultValue": "san_francisco_police_department.parquet"
					},
					"dataset": {
						"type": "string",
						"defaultValue": "police_department"
					}
				},
				"variables": {
					"insert_datetime": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SFPD_raw')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_parquet_silver')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_log_template_silver')]",
				"[concat(variables('factoryId'), '/dataflows/01_append_trigger_time_silver')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_log_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_log_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ingestion_api_socrata.log",
						"folderPath": "01-raw",
						"fileSystem": "execution-logs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "processing_mode",
						"type": "String"
					},
					{
						"name": "insert_datetime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_log_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ingestion_api_socrata.log",
						"folderPath": "02-silver",
						"fileSystem": "execution-logs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "processing_mode",
						"type": "String"
					},
					{
						"name": "insert_datetime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_log_template_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ingestion_api_socrata_template.log",
						"folderPath": "01-raw",
						"fileSystem": "execution-logs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "processing_mode",
						"type": "String"
					},
					{
						"name": "insert_datetime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_log_template_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ingestion_api_socrata_template.log",
						"folderPath": "02-silver",
						"fileSystem": "execution-logs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "processing_mode",
						"type": "String"
					},
					{
						"name": "insert_datetime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_parquet_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"dataset": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dataset",
							"type": "Expression"
						},
						"fileSystem": "02-silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "01-raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"incident_datetime": {
							"type": "string"
						},
						"incident_date": {
							"type": "string"
						},
						"incident_time": {
							"type": "string"
						},
						"incident_year": {
							"type": "string"
						},
						"incident_day_of_week": {
							"type": "string"
						},
						"report_datetime": {
							"type": "string"
						},
						"row_id": {
							"type": "string"
						},
						"incident_id": {
							"type": "string"
						},
						"incident_number": {
							"type": "string"
						},
						"report_type_code": {
							"type": "string"
						},
						"report_type_description": {
							"type": "string"
						},
						"filed_online": {
							"type": "boolean"
						},
						"incident_code": {
							"type": "string"
						},
						"incident_category": {
							"type": "string"
						},
						"incident_subcategory": {
							"type": "string"
						},
						"incident_description": {
							"type": "string"
						},
						"resolution": {
							"type": "string"
						},
						"police_district": {
							"type": "string"
						},
						":id": {
							"type": "string"
						},
						":created_at": {
							"type": "string"
						},
						":updated_at": {
							"type": "string"
						},
						"cad_number": {
							"type": "string"
						},
						"intersection": {
							"type": "string"
						},
						"cnn": {
							"type": "string"
						},
						"analysis_neighborhood": {
							"type": "string"
						},
						"supervisor_district": {
							"type": "string"
						},
						"supervisor_district_2012": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"point": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"coordinates": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_response_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_socrata_api",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dataset": {
						"type": "string"
					},
					"trigger_time_year": {
						"type": "string"
					},
					"trigger_time_month": {
						"type": "string"
					},
					"response_format": {
						"type": "string"
					},
					"unix_trigger_time": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().file_path",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dls_socrata_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFPD_restapi_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestApiSocrataService",
					"type": "LinkedServiceReference",
					"parameters": {
						"exclude_system_fields": {
							"value": "@dataset().exclude_system_fields",
							"type": "Expression"
						},
						"limit": {
							"value": "@dataset().limit",
							"type": "Expression"
						},
						"where_1": {
							"value": "@dataset().where_1",
							"type": "Expression"
						},
						"start_date": {
							"value": "@dataset().start_date",
							"type": "Expression"
						},
						"end_date": {
							"value": "@dataset().end_date",
							"type": "Expression"
						},
						"where_2": {
							"value": "@dataset().where_2",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"exclude_system_fields": {
						"type": "string"
					},
					"limit": {
						"type": "string"
					},
					"where_1": {
						"type": "string"
					},
					"start_date": {
						"type": "string"
					},
					"end_date": {
						"type": "string"
					},
					"where_2": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestApiSocrataService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestApiSocrataService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Basic",
				"parameters": {
					"exclude_system_fields": {
						"type": "string"
					},
					"limit": {
						"type": "string"
					},
					"where_1": {
						"type": "string"
					},
					"start_date": {
						"type": "string"
					},
					"end_date": {
						"type": "string"
					},
					"where_2": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestApiSocrataService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestApiSocrataService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestApiSocrataService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dls_socrata_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dls_socrata_api_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dls_socrata_api_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/everyday_210PM_Brasilia')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "02_validate_extraction_silver",
							"type": "PipelineReference"
						},
						"parameters": {
							"file_name": "[parameters('everyday_210PM_Brasilia_properties_02_validate_extraction_silver_parameters_file_name')]",
							"dataset": "[parameters('everyday_210PM_Brasilia_properties_02_validate_extraction_silver_parameters_dataset')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-06-09T14:10:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02_validate_extraction_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/everyday_2PM_Brasilia')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "01_extract_from_api_raw",
							"type": "PipelineReference"
						},
						"parameters": {
							"exclude_system_fields": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_exclude_system_fields')]",
							"limit": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_limit')]",
							"where_1": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_where_1')]",
							"dataset": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_dataset')]",
							"field_name_1": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_field_name_1')]",
							"response_format": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_response_format')]",
							"field_name_2": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_field_name_2')]",
							"where_2": "[parameters('everyday_2PM_Brasilia_properties_01_extract_from_api_raw_parameters_where_2')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-06-05T14:00:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01_extract_from_api_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_append_trigger_time_bronze')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SFPD_log_template_raw",
								"type": "DatasetReference"
							},
							"name": "LogSourceTemplate"
						},
						{
							"dataset": {
								"referenceName": "SFPD_log_raw",
								"type": "DatasetReference"
							},
							"name": "LogSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SFPD_log_raw",
								"type": "DatasetReference"
							},
							"name": "LogLoad"
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LogSourceTemplate",
						"source(output(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LogSource",
						"LogSource, LogSourceTemplate union(byName: false)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     partitionFileNames:['ingestion_api_socrata.log'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> LogLoad"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SFPD_log_template_raw')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_log_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_append_trigger_time_silver')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SFPD_log_template_silver",
								"type": "DatasetReference"
							},
							"name": "LogSourceTemplate"
						},
						{
							"dataset": {
								"referenceName": "SFPD_log_silver",
								"type": "DatasetReference"
							},
							"name": "LogSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SFPD_log_silver",
								"type": "DatasetReference"
							},
							"name": "LogLoad"
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LogSourceTemplate",
						"source(output(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LogSource",
						"LogSource, LogSourceTemplate union(byName: false)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     partitionFileNames:['ingestion_api_socrata.log'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> LogLoad"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SFPD_log_template_silver')]",
				"[concat(variables('factoryId'), '/datasets/SFPD_log_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/current_datetime_OLD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "OLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SFPD_log_raw",
								"type": "DatasetReference"
							},
							"name": "LogSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SFPD_log_raw",
								"type": "DatasetReference"
							},
							"name": "loadLoad"
						}
					],
					"transformations": [
						{
							"name": "currentdatetime"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LogSource",
						"LogSource derive(processing_mode = toString('FULL LOAD'),",
						"          insert_datetime = concat(concat(concat(toString(currentTimestamp(), 'yyyy-MM-dd', 'UTC', 'en-US'),'T'),toString(currentTimestamp(), 'HH:mm:ss.SSSSSSS', 'UTC', 'en-US')),'Z')) ~> currentdatetime",
						"currentdatetime, LogSource union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     partitionFileNames:['ingestion_api_socrata.log'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> loadLoad"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SFPD_log_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/max_datetime_OLD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "OLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SFPD_log_raw",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						},
						{
							"name": "rank1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          processing_mode as string,",
						"          insert_datetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sort(desc(insert_datetime, false)) ~> sort1",
						"sort1 rank(desc(insert_datetime, true),",
						"     output(insert_datetime_rank as long)) ~> rank1",
						"rank1 filter(insert_datetime_rank == 1) ~> filter1",
						"filter1 select(mapColumn(",
						"          insert_datetime",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SFPD_log_raw')]"
			]
		}
	]
}