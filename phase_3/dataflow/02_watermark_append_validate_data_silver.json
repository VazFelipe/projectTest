{
	"name": "02_watermark_append_validate_data_silver",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SFPD_log_template_silver",
						"type": "DatasetReference"
					},
					"name": "LogSourceTemplate"
				},
				{
					"dataset": {
						"referenceName": "SFPD_log_silver",
						"type": "DatasetReference"
					},
					"name": "LogSource"
				},
				{
					"linkedService": {
						"referenceName": "dls_socrata_api",
						"type": "LinkedServiceReference"
					},
					"name": "SFPDRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SFPD_log_silver",
						"type": "DatasetReference"
					},
					"name": "LogLoad"
				},
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "unionWatermarkToLog"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          processing_mode as string,",
				"          insert_datetime as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LogSourceTemplate",
				"source(output(",
				"          processing_mode as string,",
				"          insert_datetime as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LogSource",
				"source(output(",
				"          {:created_at} as string,",
				"          {:id} as string,",
				"          {:updated_at} as string,",
				"          analysis_neighborhood as string,",
				"          cad_number as integer,",
				"          cnn as decimal(8,0),",
				"          filed_online as boolean,",
				"          incident_category as string,",
				"          incident_code as integer,",
				"          incident_date as string,",
				"          incident_datetime as string,",
				"          incident_day_of_week as string,",
				"          incident_description as string,",
				"          incident_id as integer,",
				"          incident_number as integer,",
				"          incident_subcategory as string,",
				"          incident_time as string,",
				"          incident_year as integer,",
				"          intersection as string,",
				"          latitude as decimal(17,15),",
				"          longitude as decimal(17,14),",
				"          point as (coordinates as decimal(17,15)[], type as string),",
				"          police_district as string,",
				"          report_datetime as string,",
				"          report_type_code as string,",
				"          report_type_description as string,",
				"          resolution as string,",
				"          row_id as long,",
				"          supervisor_district as integer,",
				"          supervisor_district_2012 as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: '01-raw',",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['*/*/*/*.json'],",
				"     partitionBy('hash', 1)) ~> SFPDRaw",
				"LogSource, LogSourceTemplate union(byName: false)~> unionWatermarkToLog",
				"SFPDRaw derive(latitude_derived = iifNull(latitude, 37.774929)) ~> derivedColumn1",
				"unionWatermarkToLog sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          processing_mode as string,",
				"          insert_datetime as string",
				"     ),",
				"     partitionFileNames:['ingestion_api_socrata.log'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> LogLoad",
				"derivedColumn1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          {:created_at},",
				"          {:id},",
				"          {:updated_at},",
				"          analysis_neighborhood,",
				"          cad_number,",
				"          cnn,",
				"          filed_online,",
				"          incident_category,",
				"          incident_code,",
				"          incident_date,",
				"          incident_datetime,",
				"          incident_day_of_week,",
				"          incident_description,",
				"          incident_id,",
				"          incident_number,",
				"          incident_subcategory,",
				"          incident_time,",
				"          incident_year,",
				"          intersection,",
				"          latitude = latitude_derived,",
				"          longitude,",
				"          point,",
				"          police_district,",
				"          report_datetime,",
				"          report_type_code,",
				"          report_type_description,",
				"          resolution,",
				"          row_id,",
				"          supervisor_district,",
				"          supervisor_district_2012,",
				"          latitude_derived",
				"     )) ~> sink1"
			]
		}
	}
}